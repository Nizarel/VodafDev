# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: User JAVA CICD

env:
  registry: openhack8acr.azurecr.io
  repository: VodafDev/apis/poi/api-user-java
  docker_path: apis/user-java
  staging_url: https://openhack8userjava-staging.azurewebsites.net
  prod_url: https://openhack8userjava.azurewebsites.net
  resource_group: openhack8rg
  webapp_name: openhack8userjava
  build_name: User Java
  webv_path: apis/user-java/webvalidate


on:
  push:
    branches: [ master ]
    paths: 
      - apis/user-java/**  
      - .github/workflows/user-java.yml
  pull_request:
    branches: [ master ]
    paths: 
      - apis/user-java/**
      - .github/workflows/user-java.yml


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file apis/user-java/pom.xml
    - name: Run Unit Tests
      run: mvn test --file apis/user-java/pom.xml

    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });



  #  - name: Publish to GitHub Packages Apache Maven
  #    run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
  #    env:
  #      GITHUB_TOKEN: ${{ github.token }}
