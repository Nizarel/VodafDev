name: User Profile CICD

env:
  registry: openhack8acr.azurecr.io
  repository: userprofile
  docker_path: apis/userprofile
  staging_url: https://openhack8userprofile-staging.azurewebsites.net
  web_app: openhack8userprofile
  resource_group: openhack8rg
  webapp_name: openhack8userprofile
  build_name: User Profile
  webv_path: apis/userprofile/webvalidate

on:
  push:
    branches: [ master ]
    paths: 
      - apis/userprofile/**  
      - .github/workflows/userprofile.yml
  pull_request:
    branches: [ master ]
    paths: 
      - apis/userprofile/**
      - .github/workflows/userprofile.yml

jobs:
  build_and_test:

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: apis/userprofile

    strategy:
      matrix:
        node-version: [15.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });

  docker_build_and_push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: build_and_test
    steps:
    
    - uses: actions/checkout@v2
    
    - name: 'Login to ACR'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USER }}
        password: ${{ secrets.ACR_KEY }}

    - name: Docker build
      run: docker build -t $registry/$repository:${{github.run_number}} --build-arg build_version=${{github.run_number}} $docker_path

    - name: Docker Push
      run: docker push $registry/$repository:${{github.run_number}}
    
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
 
  deploy_webapp:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: docker_build_and_push
    steps:
    
    - uses: actions/checkout@v2

    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: 'Login to ACR'
      uses: azure/docker-login@v1
      with:
        login-server: $registry
        username: ${{ secrets.ACR_USER }}
        password: ${{ secrets.ACR_KEY }}

    - name: 'Deploy to Azure Web App for Container'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.web_app }} 
        images: $registry/$repository:${{github.run_number}}